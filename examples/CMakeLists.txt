# include Chai3d 
# -- this is required by Chai3d to pick the correct path for OpenGL headers
FIND_PACKAGE(CHAI3D REQUIRED)
ADD_DEFINITIONS(${CHAI3D_DEFINITIONS})
if (CMAKE_SYSTEM_NAME MATCHES Darwin) 
  ADD_DEFINITIONS(-D_MACOSX -DMACOSX)
elseif (CMAKE_SYSTEM_NAME MATCHES Linux)
  ADD_DEFINITIONS(-D_LINUX -DLINUX)
endif () #NOTE: Windows is currently unsupported
LINK_DIRECTORIES(${CHAI3D_LIBRARY_DIRS})
INCLUDE_DIRECTORIES(${CHAI3D_INCLUDE_DIRS})

# - SAI2-SIMULATION
find_package(SAI2-SIMULATION REQUIRED)
include_directories(${SAI2-SIMULATION_INCLUDE_DIRS})
add_definitions(${SAI2-SIMULATION_DEFINITIONS})

# - SAI2-GRAPHICS
FIND_PACKAGE(SAI2-GRAPHICS REQUIRED)
include_directories(${SAI2-GRAPHICS_INCLUDE_DIRS})
add_definitions(${SAI2-GRAPHICS_DEFINITIONS})

# - SAI2-COMMON
FIND_PACKAGE(SAI2-COMMON REQUIRED)
include_directories(${SAI2-COMMON_INCLUDE_DIRS})

# - SAI2-URDF
FIND_PACKAGE(SAI2-URDF REQUIRED)
include_directories(${SAI2-URDF_INCLUDE_DIRS})

# # - glfw3
# find_package(glfw3 QUIET)
# find_library(GLFW_LIBRARY glfw)

set(SAI2-PRIMITIVES_EXAMPLES_COMMON_LIBRARIES
	${SAI2-MODEL_LIBRARIES}
	${SAI2-GRAPHICS_LIBRARIES}
	${SAI2-SIMULATION_LIBRARIES}
	${SAI2-COMMON_LIBRARIES}
	${SAI2-URDF_LIBRARIES}
	${CHAI3D_LIBRARIES}
	# ${GLFW_LIBRARY}
	)

ADD_SUBDIRECTORY(01-joint_control)
ADD_SUBDIRECTORY(02-joint_control_internal_otg)
ADD_SUBDIRECTORY(03-cartesian_motion_control)
ADD_SUBDIRECTORY(04-task_and_redundancy)
ADD_SUBDIRECTORY(05-using_robot_controller)
ADD_SUBDIRECTORY(06-partial_joint_task)
ADD_SUBDIRECTORY(07-surface_surface_contact)
ADD_SUBDIRECTORY(08-partial_motion_force_task)
ADD_SUBDIRECTORY(09-3d_position_force_controller)
ADD_SUBDIRECTORY(10-3d_orientation_controller)
ADD_SUBDIRECTORY(11-planar_robot_controller)
ADD_SUBDIRECTORY(15-haptic_control_impedance_type)
ADD_SUBDIRECTORY(16-haptic_control_admittance_type)
ADD_SUBDIRECTORY(17-bilateral_teleop_with_POPC)
ADD_SUBDIRECTORY(21-singularity)
